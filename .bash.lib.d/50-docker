#!/usr/bin/env bash
. "$DOCKER_DEVBOX_DIR/.bash.lib.d/20-utils"

_docker_workdir() {
  CONTAINER_PROJECT_DIR="$1"
  RELATIVE_PATH=$(_utils_relative_path "$PWD")
  CONTAINER_PWD="$CONTAINER_PROJECT_DIR$RELATIVE_PATH"
  echo "$CONTAINER_PWD"
}

_docker_find_service_image() {
    SERVICE="$1"
    50-docker inspect "$(docker-compose ps -q "${SERVICE}")" | jq -r '.[0].Config.Image'
}

_docker_find_service_user() {
    SERVICE="$1"
    50-docker inspect "$(docker-compose ps -q "${SERVICE}")" | jq -r '.[0].Config.User'
}

_docker_find_service_networks() {
    SERVICE="$1"
    50-docker inspect "$(docker-compose ps -q "${SERVICE}")" | jq -r '.[0].NetworkSettings.Networks | keys |  join(" ")'
}

_docker_find_service_volumes() {
    SERVICE="$1"
    50-docker inspect "$(docker-compose ps -q "${SERVICE}")" | jq -r '.[0].Mounts[] | [if (.Type == "volume") then .Name else .Source end, .Destination, .Mode] | join(":")'
}

_docker_find_image_entrypoint() {
    IMAGE="$1"
    50-docker inspect "${IMAGE}" | jq -r '.[0].Config.Entrypoint | join(" ")'
}
